* object-oriented programming anti-patterns in Ruby

"Object-oriented programming is an exceptionally bad idea which could only have originated in California."
  - Edsger Dijkstra

"Object-oriented design is the roman numerals of computing."
  - Rob Pike

[[./colouring.jpg]]

* why OO?

 + originally intended to make programming accessible to the non-technical (including and especially children)

 + took over a decade to go mainstream with C++ (not suitable for children)

 + makes certain good practices easy

* OO principles

 + abstraction

 + encapsulation

 + inheritance

 + polymorphism

* "everything is a string"

url = 'http://example.com/resource'
=> "http://example.com/resource"

url = 'this is not a url'
=> "this is not a url"

* use the type system

url = URI.parse('http://example.com/resource')
=> #<URI::HTTP:0x00000804f7ff10 URL:http://example.com/resource>

url = URI.parse('this is not a url')
URI::InvalidURIError: bad URI(is not URI?): this is not a url

* "polymorphism by if statement"

def speak(animal)
  if animal.class == Cat
    'meow'
  elsif animal.class == Dog
    'woof'
  end
end

class Cat; end

class Dog; end

speak(Dog.new)
=> 'woof'

speak(Cat.new)
=> 'meow'

* wait for it ... use the type system

class Cat
  def speak
    'meow'
  end
end

class Dog
  def speak
    'woof'
  end
end

Dog.new.speak
=> 'woof'

Cat.new.speak
=> 'meow'

* "constructors with side-effects"

class Car
  attr_accessor :engine
  def initialize
    self.engine = Engine.new
  end
end

... better hope that the Engine constructor doesn't have side effects too.

* constructor injection

class Car
  attr_accessor :engine
  def initialize(engine: nil)
    self.engine = engine
  end
end

* "inheritance"

[[./costanza.jpg]]

 + harder to reason about (for me, at least)

 + harder to test

* consider using other patterns

 + composition

 + mixins

* credits

 + http://harmful.cat-v.org/software/OO_programming/
   OO quotes

 + https://www.flickr.com/photos/spikeyhelen/2468971942/
   'Andrew Colouring B&W' (Helen Cassidy)

 + http://gagne.homedns.org/~tgagne/contrib/EarlyHistoryST.html
   history of Smalltalk

 + http://www.diylol.com/
   George Costanza image macro

 + http://www.freebsd.org/
   laptop operating system

 + https://github.com/rlister/org-present
   presentations in Emacs
